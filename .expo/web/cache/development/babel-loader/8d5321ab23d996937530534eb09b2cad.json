{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'react-native-gesture-handler';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar LoginScreen = function LoginScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Home Screen\"\n    })\n  });\n};\n\nvar MiCoberturaTab = function MiCoberturaTab() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"MiCoberturaTab Screen\"\n    })\n  });\n};\n\nvar AsistenciaMedicaTab = function AsistenciaMedicaTab() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"AsistenciaMedicaTab Screen\"\n    })\n  });\n};\n\nvar FechasFlexiblesTab = function FechasFlexiblesTab() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"FechasFlexiblesTab Screen\"\n    })\n  });\n};\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isSignedIn: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(NavigationContainer, {\n        children: this.state.isSignedIn ? _jsx(Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }) : _jsxs(Tab.Navigator, {\n          children: [_jsx(Tab.Screen, {\n            name: \"MiCoberturaTab\",\n            component: MiCoberturaTab\n          }), _jsx(Tab.Screen, {\n            name: \"AsistenciaMedicaTab\",\n            component: AsistenciaMedicaTab\n          }), _jsx(Tab.Screen, {\n            name: \"FechasFlexiblesTab\",\n            component: FechasFlexiblesTab\n          })]\n        })\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default App;","map":{"version":3,"sources":["D:/Proyectos/ProyectoAppAssistmed/AppAssistmed/App.js"],"names":["React","Component","NavigationContainer","createStackNavigator","createBottomTabNavigator","Stack","Tab","LoginScreen","flex","alignItems","justifyContent","MiCoberturaTab","AsistenciaMedicaTab","FechasFlexiblesTab","App","props","state","isSignedIn","styles","StyleSheet","create","container","backgroundColor"],"mappings":";;;;;;;;;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;;;AAGA,IAAMC,KAAK,GAAGF,oBAAoB,EAAlC;AACA,IAAMG,GAAG,GAAGF,wBAAwB,EAApC;;AAEA,IAAMG,WAAW,GAAG,SAAdA,WAAc,GAAQ;AACxB,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,QAAvB;AAAiCC,MAAAA,cAAc,EAAE;AAAjD,KAAb;AAAA,cACA,KAAC,IAAD;AAAA;AAAA;AADA,IADJ;AAKH,CAND;;AAOA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAQ;AAC3B,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEH,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,QAAvB;AAAiCC,MAAAA,cAAc,EAAE;AAAjD,KAAb;AAAA,cACA,KAAC,IAAD;AAAA;AAAA;AADA,IADJ;AAKH,CAND;;AAOA,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAQ;AAChC,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEJ,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,QAAvB;AAAiCC,MAAAA,cAAc,EAAE;AAAjD,KAAb;AAAA,cACA,KAAC,IAAD;AAAA;AAAA;AADA,IADJ;AAKH,CAND;;AAOA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,GAAQ;AAC/B,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEL,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,QAAvB;AAAiCC,MAAAA,cAAc,EAAE;AAAjD,KAAb;AAAA,cACA,KAAC,IAAD;AAAA;AAAA;AADA,IADJ;AAKH,CAND;;IAQMI,G;;;;;AAEF,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAC;AADF,KAAb;AAHe;AAMlB;;;;WAED,kBAAS;AACL,aACA,KAAC,mBAAD;AAAA,kBACC,KAAKD,KAAL,CAAWC,UAAX,GACG,KAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,OAAb;AAAqB,UAAA,SAAS,EAAEV;AAAhC,UADH,GAGG,MAAC,GAAD,CAAK,SAAL;AAAA,qBACI,KAAC,GAAD,CAAK,MAAL;AAAY,YAAA,IAAI,EAAC,gBAAjB;AAAkC,YAAA,SAAS,EAAEI;AAA7C,YADJ,EAEI,KAAC,GAAD,CAAK,MAAL;AAAY,YAAA,IAAI,EAAC,qBAAjB;AAAuC,YAAA,SAAS,EAAEC;AAAlD,YAFJ,EAGI,KAAC,GAAD,CAAK,MAAL;AAAY,YAAA,IAAI,EAAC,oBAAjB;AAAsC,YAAA,SAAS,EAAEC;AAAjD,YAHJ;AAAA;AAJJ,QADA;AAaH;;;;EAxBaZ,S;;AA2BlB,IAAMiB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPb,IAAAA,IAAI,EAAE,CADC;AAEPc,IAAAA,eAAe,EAAE,MAFV;AAGPb,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT;AADkB,CAAlB,CAAf;AASA,eAAeI,GAAf","sourcesContent":["import 'react-native-gesture-handler';\nimport React, { Component } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst LoginScreen = () =>   {\n    return (\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <Text>Home Screen</Text>\n        </View>\n    );\n}\nconst MiCoberturaTab = () =>   {\n    return (\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <Text>MiCoberturaTab Screen</Text>\n        </View>\n    );\n}\nconst AsistenciaMedicaTab = () =>   {\n    return (\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <Text>AsistenciaMedicaTab Screen</Text>\n        </View>\n    );\n}\nconst FechasFlexiblesTab = () =>   {\n    return (\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <Text>FechasFlexiblesTab Screen</Text>\n        </View>\n    );\n}\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isSignedIn:true,\n        };\n    }\n\n    render() {\n        return (\n        <NavigationContainer>\n        {this.state.isSignedIn ? (\n            <Screen name=\"Login\" component={LoginScreen} />\n            ) : (\n            <Tab.Navigator>\n                <Tab.Screen name=\"MiCoberturaTab\" component={MiCoberturaTab} />\n                <Tab.Screen name=\"AsistenciaMedicaTab\" component={AsistenciaMedicaTab} />\n                <Tab.Screen name=\"FechasFlexiblesTab\" component={FechasFlexiblesTab} />\n            </Tab.Navigator>\n            )}\n        </NavigationContainer>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n\nexport default App;"]},"metadata":{},"sourceType":"module"}